using System.Text.Json.Serialization;

namespace FractalGPT.SharpGPTLib.API.LLMAPI;

/// <summary>
/// Represents one of the possible response options returned by the model.
/// </summary>
[Serializable]
public class Choice
{
    /// <summary>
    /// The index of the option (starting from zero).
    /// </summary>
    [JsonPropertyName("index")]
    public int Index { get; set; }

    /// <summary>
    /// The message generated by the model.
    /// </summary>
    [JsonPropertyName("message")]
    public LLMMessage Message { get; set; }

    /// <summary>
    /// The reason the model stopped generating the response.
    /// </summary>
    [JsonPropertyName("finish_reason")]
    public string FinishReason { get; set; }

    /// <summary>
    /// The native reason for stopping, specific to the provider.
    /// </summary>
    [JsonPropertyName("native_finish_reason")]
    public string NativeFinishReason { get; set; }

    /// <summary>
    /// Log probabilities (optional, may be null).
    /// </summary>
    [JsonPropertyName("logprobs")]
    public Logprobs Logprobs { get; set; }

    /// <summary>
    /// Refusal reason (optional, may be null).
    /// </summary>
    [JsonPropertyName("refusal")]
    public string Refusal { get; set; }

    /// <summary>
    /// Reasoning provided by the model (optional).
    /// </summary>
    [JsonPropertyName("reasoning")]
    public string Reasoning { get; set; }

    /// <summary>
    /// Detailed reasoning steps (optional).
    /// </summary>
    [JsonPropertyName("reasoning_details")]
    public List<ReasoningDetail> ReasoningDetails { get; set; }
}

/// <summary>
/// Represents an image URL object, typically containing base64 data.
/// </summary>
[Serializable]
public class ImageUrl
{
    /// <summary>
    /// The URL of the image, often a data URI (e.g., "data:image/png;base64,...").
    /// </summary>
    [JsonPropertyName("url")]
    public string Url { get; set; }
}

/// <summary>
/// Represents image information included in a message.
/// </summary>
[Serializable]
public class ImageInfo
{
    /// <summary>
    /// The type of the content, e.g., "image_url".
    /// </summary>
    [JsonPropertyName("type")]
    public string Type { get; set; }

    /// <summary>
    /// The image URL object containing the image data.
    /// </summary>
    [JsonPropertyName("image_url")]
    public ImageUrl ImageUrl { get; set; }

    /// <summary>
    /// The index of the image in the sequence.
    /// </summary>
    [JsonPropertyName("index")]
    public int Index { get; set; }
}


/// <summary>
/// Represents the log probabilities data for the generated tokens.
/// </summary>
[Serializable]
public class Logprobs
{
    /// <summary>
    /// List of token-level log probability details.
    /// </summary>
    [JsonPropertyName("content")]
    public List<TokenLogprob> Content { get; set; }
}

/// <summary>
/// Represents log probability details for a single token.
/// </summary>
[Serializable]
public class TokenLogprob
{
    /// <summary>
    /// The generated token.
    /// </summary>
    [JsonPropertyName("token")]
    public string Token { get; set; }

    /// <summary>
    /// The log probability of the token.
    /// </summary>
    [JsonPropertyName("logprob")]
    public double Logprob { get; set; }

    /// <summary>
    /// The byte representation of the token.
    /// </summary>
    [JsonPropertyName("bytes")]
    public List<int> Bytes { get; set; }

    /// <summary>
    /// The top alternative tokens and their log probabilities.
    /// </summary>
    [JsonPropertyName("top_logprobs")]
    public List<TopLogprob> TopLogprobs { get; set; }
}

/// <summary>
/// Represents a single top alternative token and its log probability.
/// </summary>
[Serializable]
public class TopLogprob
{
    /// <summary>
    /// The alternative token.
    /// </summary>
    [JsonPropertyName("token")]
    public string Token { get; set; }

    /// <summary>
    /// The log probability of the alternative token.
    /// </summary>
    [JsonPropertyName("logprob")]
    public double Logprob { get; set; }

    /// <summary>
    /// The byte representation of the alternative token.
    /// </summary>
    [JsonPropertyName("bytes")]
    public List<int> Bytes { get; set; }


    public TopLogprob() { }

    public TopLogprob(string token, double logprob, List<int> bytes)
    {
        Token = token;
        Logprob = logprob;
        Bytes = bytes;
    }
}