using FractalGPT.GUI.Models;
using FractalGPT.SharpGPTLib.API.LocalServer;
using FractalGPT.SharpGPTLib.Prompts.PersonaChat;
using FractalGPT.SharpGPTLib.Tasks.DialogTasks;
using System;
using System.Threading.Tasks;

namespace FractalGPT.GUI.Bots
{
    /// <summary>
    /// Provides an interface for a persona-based chatbot within a GUI application.
    /// This class is responsible for handling the interaction between the GUI (MainForm),
    /// the persona chat functionality, and the backend API for text generation.
    /// </summary>
    [Serializable]
    public class PersonaBotInterface : IBotInterface
    {
        PersonaBot _personaBot;
        MainForm _window;
        BaseLLMServerAPI _baseAPI;

        /// <summary>
        /// Initializes a new instance of the PersonaBotInterface class.
        /// </summary>
        /// <param name="mainForm">The main form of the GUI application, used for displaying messages.</param>
        /// <param name="personaChat">The persona chat object, defining the chatbot's persona.</param>
        /// <param name="host">The host address of the backend API server for text generation.</param>
        public PersonaBotInterface(MainForm mainForm, PersonaChat personaChat, string host)
        {
            _window = mainForm;
            _baseAPI = new BaseLLMServerAPI(host);
            _personaBot = new PersonaBot(personaChat);
            _personaBot.AnswerGenAsync = GetAns;
            _personaBot.NewAnswer += _personaBot_NewAnswer;
        }

        /// <summary>
        /// Sends a query to the persona bot for processing and generating a response.
        /// </summary>
        /// <param name="q">The query string to send to the persona bot.</param>
        public async void Send(string q)
        {
            _personaBot.SendAnswer(q);
        }

        /// <summary>
        /// Event handler for processing new answers generated by the persona bot.
        /// Adds the new answer to the GUI's message list and scrolls into view.
        /// </summary>
        /// <param name="obj">The generated answer string from the persona bot.</param>
        private void _personaBot_NewAnswer(string obj)
        {
            _window.MessagesList.Items.Add(new Message(obj, Sender.Bot));
            _window.MessagesList.ScrollIntoView(_window.MessagesList.Items[^1]);
        }

        /// <summary>
        /// Asynchronous method for generating text based on the input using the backend API.
        /// </summary>
        /// <param name="input">The input string for text generation.</param>
        /// <returns>A task that represents the asynchronous operation, containing the generated text as its result.</returns>
        private async Task<string> GetAns(string input)
        {
            return await _baseAPI.TextGeneration(input, 150);
        }
    }
}
